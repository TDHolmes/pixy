; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\m0\qqueue.o --asm_dir=.\ --list_dir=.\ --depend=.\m0\qqueue.d --cpu=Cortex-M0 --apcs=interwork -O0 --diag_suppress=9931 -I. -I..\libpixy -I..\..\common -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=514 -DCORE_M0 -DIPC_SLAVE -DPIXY --omf_browse=.\m0\qqueue.crf ..\libpixy\qqueue.c]
                          THUMB

                          AREA ||i.qq_enqueue||, CODE, READONLY, ALIGN=2

                  qq_enqueue PROC
;;;20     
;;;21     uint32_t qq_enqueue(const Qval *val)
000000  b510              PUSH     {r4,lr}
;;;22     {
000002  4604              MOV      r4,r0
;;;23         if (qq_free()>0)
000004  f7fffffe          BL       qq_free
000008  2800              CMP      r0,#0
00000a  dd25              BLE      |L1.88|
;;;24         {
;;;25             g_qqueue->data[g_qqueue->writeIndex++] = *val;
00000c  4913              LDR      r1,|L1.92|
00000e  6809              LDR      r1,[r1,#0]  ; g_qqueue
000010  884a              LDRH     r2,[r1,#2]
000012  4912              LDR      r1,|L1.92|
000014  6809              LDR      r1,[r1,#0]  ; g_qqueue
000016  8849              LDRH     r1,[r1,#2]
000018  1c49              ADDS     r1,r1,#1
00001a  4b10              LDR      r3,|L1.92|
00001c  681b              LDR      r3,[r3,#0]  ; g_qqueue
00001e  8059              STRH     r1,[r3,#2]
000020  00d2              LSLS     r2,r2,#3
000022  490e              LDR      r1,|L1.92|
000024  6809              LDR      r1,[r1,#0]  ; g_qqueue
000026  3108              ADDS     r1,r1,#8
000028  1850              ADDS     r0,r2,r1
00002a  2208              MOVS     r2,#8
00002c  4621              MOV      r1,r4
00002e  f7fffffe          BL       __aeabi_memcpy
;;;26             g_qqueue->produced++;
000032  480a              LDR      r0,|L1.92|
000034  6800              LDR      r0,[r0,#0]  ; g_qqueue
000036  8880              LDRH     r0,[r0,#4]
000038  1c40              ADDS     r0,r0,#1
00003a  4908              LDR      r1,|L1.92|
00003c  6809              LDR      r1,[r1,#0]  ; g_qqueue
00003e  8088              STRH     r0,[r1,#4]
;;;27     		if (g_qqueue->writeIndex==QQ_MEM_SIZE)
000040  4806              LDR      r0,|L1.92|
000042  6800              LDR      r0,[r0,#0]  ; g_qqueue
000044  8840              LDRH     r0,[r0,#2]
000046  4906              LDR      r1,|L1.96|
000048  4288              CMP      r0,r1
00004a  d103              BNE      |L1.84|
;;;28     			g_qqueue->writeIndex = 0;
00004c  2000              MOVS     r0,#0
00004e  4903              LDR      r1,|L1.92|
000050  6809              LDR      r1,[r1,#0]  ; g_qqueue
000052  8048              STRH     r0,[r1,#2]
                  |L1.84|
;;;29             return 1;
000054  2001              MOVS     r0,#1
                  |L1.86|
;;;30         }
;;;31         return 0;
;;;32     }
000056  bd10              POP      {r4,pc}
                  |L1.88|
000058  2000              MOVS     r0,#0                 ;31
00005a  e7fc              B        |L1.86|
;;;33     
                          ENDP

                  |L1.92|
                          DCD      g_qqueue
                  |L1.96|
                          DCD      0x0000077f

                          AREA ||i.qq_free||, CODE, READONLY, ALIGN=2

                  qq_free PROC
;;;33     
;;;34     uint16_t qq_free(void)
000000  4805              LDR      r0,|L2.24|
;;;35     {
;;;36         uint16_t len = g_qqueue->produced - g_qqueue->consumed;
000002  6800              LDR      r0,[r0,#0]  ; g_qqueue
000004  8880              LDRH     r0,[r0,#4]
000006  4a04              LDR      r2,|L2.24|
000008  6812              LDR      r2,[r2,#0]  ; g_qqueue
00000a  88d2              LDRH     r2,[r2,#6]
00000c  1a80              SUBS     r0,r0,r2
00000e  b281              UXTH     r1,r0
;;;37     	return QQ_MEM_SIZE-len;
000010  4802              LDR      r0,|L2.28|
000012  1a40              SUBS     r0,r0,r1
000014  b280              UXTH     r0,r0
;;;38     } 
000016  4770              BX       lr
                          ENDP

                  |L2.24|
                          DCD      g_qqueue
                  |L2.28|
                          DCD      0x0000077f

                          AREA ||.data||, DATA, ALIGN=2

                  g_qqueue
                          DCD      0x2000c000
